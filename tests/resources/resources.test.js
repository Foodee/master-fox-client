import Resource from '../../src/resources/resource';
import { Client } from '../../src/resources/resources';
import Faker from 'faker';

test('Resource#toJSONAPI', () => {
  const id = Faker.random.number();
  const type = Faker.lorem.word();
  const attributeValue = Faker.lorem.sentence();

  const resource = new Resource(
    id,
    type,
    {
      anAttribute: attributeValue
    });

  const jrObject = resource.toJSONAPI();

  expect(jrObject.data.id).toBe(id.toString());
  expect(jrObject.data.type).toBe(type);
  expect(jrObject.data.attributes.anAttribute).toBe(attributeValue);
});


/*
The client is generated by master fox, we are doing a basic smoke test for
the attribute mapping feature by faking a client from a standard request attribute hash
 */
test('Client#toJSONAPI', () => {
  const id = Faker.random.number();
  const client = new Client(id);

  // set a property
  const accountName = Faker.lorem.word();
  client.accountName = accountName;
  expect(client.accountName).toBe(accountName);

  const jrObject = client.toJSONAPI();

  expect(jrObject.data.id).toBe(id.toString());
  expect(jrObject.data.type).toBe('clients')
  expect(jrObject.data.attributes['account-name']).toBe(accountName)
});
